{"version":3,"sources":["assets/logo.svg","assets/background.svg","services/api.ts","pages/List/styles.ts","pages/List/index.tsx","pages/Repo/styles.ts","pages/Repo/index.tsx","routes/index.tsx","GlobalStyles.ts","App.tsx","index.tsx"],"names":["module","exports","api","axios","create","baseURL","Title","styled","h1","Form","form","props","hasError","css","shade","RepoList","div","Error","span","List","useState","inputRepo","setInputRepo","inputError","setInputError","storagedRepositories","localStorage","getItem","JSON","parse","repositories","setRepositories","event","a","preventDefault","get","data","repository","useEffect","setItem","stringify","src","logo","alt","onSubmit","value","onChange","target","type","map","key","full_name","to","owner","avatar_url","login","description","size","RepoInfo","section","Header","header","Issues","Repo","setRepository","issues","setIssues","params","useRouteMatch","then","response","stargazers_count","forks_count","open_issues_count","issue","id","href","html_url","title","user","Routes","path","exact","component","createGlobalStyle","backgroundImg","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3641de96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.0b819d63.svg\";","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/',\n});\nexport default api;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Title = styled.h1`\n  margin-top: 60px;\n  font-size: 28px;\n  color: #3a3a3a;\n  max-width: 450px;\n  line-height: 56px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  display: flex;\n  margin-top: 40px;\n  max-width: 700px;\n\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 0;\n    border-radius: 5px 0 0 5px;\n    color: #3a3a3a;\n    border: 2px solid #fff;\n    border-right: 0;\n\n    ${props =>\n      props.hasError &&\n      css`\n        border-color: #c53030;\n      `}\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n\n  button {\n    background: #4dd354;\n    width: 210px;\n    height: 70px;\n    border-radius: 0 5px 5px 0;\n    border: 0;\n    color: white;\n    font-weight: bold;\n    transition: background-color ease-in-out 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#4dd354')};\n    }\n  }\n`;\n\nexport const RepoList = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 80px;\n  max-width: 700px;\n\n  a {\n    display: flex;\n    align-items: center;\n\n    background: white;\n    border-radius: 5px;\n\n    width: 100%;\n    padding: 24px;\n\n    text-decoration: none;\n\n    transition: transform ease-in-out 0.2s;\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    & + a {\n      margin-top: 10px;\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n    }\n\n    div {\n      display: flex;\n      flex: 1;\n      flex-direction: column;\n\n      margin-left: 16px;\n\n      strong {\n        font-size: 20px;\n        color: #303d4d;\n      }\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  margin-top: 6px;\n  color: #c53030;\n`;\n","import React, { useState, useEffect, FormEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport { Title, Form, RepoList, Error } from './styles';\n\nimport logo from '../../assets/logo.svg';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst List: React.FC = () => {\n  const [inputRepo, setInputRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storagedRepositories = localStorage.getItem('@RepoList:repositories');\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@RepoList:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  async function addRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    event.preventDefault();\n    if (!inputRepo) {\n      setInputError('digite autor/nome do reposit贸rio');\n      return;\n    }\n    try {\n      const { data } = await api.get<Repository>(`repos/${inputRepo}`);\n      const repository = data;\n      setRepositories([...repositories, repository]);\n      setInputRepo('');\n      setInputError('');\n    } catch {\n      setInputError('erro na busca desse reposit贸rio');\n    }\n  }\n\n  return (\n    <>\n      <img src={logo} alt=\"Github Explorer\" />\n      <Title>Digite o Reposit贸rio a ser buscado.</Title>\n      <Form hasError={!!inputError} onSubmit={addRepository}>\n        <input\n          value={inputRepo}\n          onChange={event => setInputRepo(event.target.value)}\n          type=\"Digite o nome do reposit贸rio\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <RepoList>\n        {repositories.map(repository => (\n          <Link\n            key={repository.full_name}\n            to={`/repository/${repository.full_name}`}\n          >\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n            <FiChevronRight size={20} />\n          </Link>\n        ))}\n      </RepoList>\n    </>\n  );\n};\n\nexport default List;\n","import styled from 'styled-components';\n\nexport const RepoInfo = styled.section`\n  margin-top: 50px;\n\n  header {\n    display: flex;\n    align-items: center;\n\n    img {\n      width: 120px;\n      height: 120px;\n      border-radius: 50%;\n    }\n    div {\n      margin-left: 24px;\n      strong {\n        font-size: 36px;\n        color: #3d3d4d;\n      }\n      p {\n        font-size: 18px;\n        color: #737380;\n      }\n    }\n  }\n\n  ul {\n    display: flex;\n    list-style: none;\n    margin-top: 40px;\n\n    li {\n      & + li {\n        margin-left: 80px;\n      }\n      strong {\n        display: block;\n        font-size: 34px;\n        color: #3d3d4d;\n      }\n      span {\n        display: block;\n        margin-top: 4px;\n        color: #6c6c88;\n      }\n    }\n  }\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  a {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    color: #a8a8b3;\n    transition: color ease-in 0.3s;\n    &:hover {\n      color: #555;\n    }\n\n    svg {\n      margin-right: 4px;\n    }\n  }\n`;\n\nexport const Issues = styled.section`\n  display: flex;\n  flex-direction: column;\n  margin-top: 80px;\n\n  a {\n    display: flex;\n    align-items: center;\n\n    background: white;\n    border-radius: 5px;\n\n    width: 100%;\n    padding: 24px;\n\n    text-decoration: none;\n\n    transition: transform ease-in-out 0.2s;\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    & + a {\n      margin-top: 10px;\n    }\n\n    div {\n      display: flex;\n      flex: 1;\n      flex-direction: column;\n\n      margin-left: 16px;\n\n      strong {\n        font-size: 20px;\n        color: #303d4d;\n      }\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport { RepoInfo, Header, Issues } from './styles';\n\nimport logo from '../../assets/logo.svg';\n\ninterface RepositoryParams {\n  repository: string;\n}\ninterface Repository {\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\ninterface Issue {\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  };\n}\n\nconst Repo: React.FC = () => {\n  const [repository, setRepository] = useState<Repository | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  useEffect(() => {\n    api\n      .get(`repos/${params.repository}`)\n      .then(response => setRepository(response.data));\n    api\n      .get(`repos/${params.repository}/issues`)\n      .then(response => setIssues(response.data));\n  }, [params.repository]);\n\n  return (\n    <>\n      <Header>\n        <img src={logo} alt=\"Github Explorer\" />\n        <Link to=\"/\">\n          <FiChevronLeft />\n          Voltar\n        </Link>\n      </Header>\n\n      {repository && (\n        <RepoInfo>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </header>\n          <ul>\n            <li>\n              <strong>{repository.stargazers_count}</strong>\n              <span>Stars</span>\n            </li>\n            <li>\n              <strong>{repository.forks_count}</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>{repository.open_issues_count}</strong>\n              <span>Issues abertas</span>\n            </li>\n          </ul>\n        </RepoInfo>\n      )}\n\n      <Issues>\n        {issues.map(issue => (\n          <a key={issue.id} href={issue.html_url}>\n            <div>\n              <strong>{issue.title}</strong>\n              <p>{issue.user.login}</p>\n            </div>\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n      </Issues>\n    </>\n  );\n};\n\nexport default Repo;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport List from '../pages/List';\nimport Repo from '../pages/Repo';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={List} />\n    <Route path=\"/repository/:repository+\" component={Repo} />\n  </Switch>\n);\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nimport backgroundImg from './assets/background.svg';\n\nexport default createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased;\n    background: #F0F0F5 url(${backgroundImg}) no-repeat 65% top;\n  }\n\n  body, button, input {\n    font: 16px Roboto, sans-serif;\n  }\n\n  #root{\n    margin: 0 auto;\n    max-width: 900px;\n    padding: 40px 20px;\n  }\n`;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Routes from './routes';\nimport GlobalStyles from './GlobalStyles';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyles />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}